name: Ethereum, NEAR, StarkNet, and Axelar Auto Commit

on:
  push:
    branches:
      - master

  schedule:
    - cron: '*/20 * * * *' # Runs every 20 minutes

  workflow_dispatch: # Allows manual triggering from the GitHub UI

permissions:
  contents: write # Grants permissions to write to the repo

env:
  GIT_USER_EMAIL: olivereric0067@gmail.com
  GIT_USER_NAME: oliveric0067

jobs:
  ethereum_auto_commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git pull origin master

      - name: Run Ethereum script
        run: |
          chmod +x ethereum.sh
          ./ethereum.sh /https://eth1.lava.build/lava-referer-daee88c3-0136-4289-b6a1-a88fdc9be1cf/

      - name: Configure Git identity
        run: |
          git config user.email "olivereric0067@gmail.com"
          git config user.name "oliveric0067"

      - name: Commit changes
        run: |
          git add -A
          git commit -m "$(shuf -n1 -e "🔥 Hotfix" "✨ Feature" "🚀 Upgrade" "🛠️ Fix" "🔧 Refactor" "🔍 Investigate" "💡 Improve" "📦 Update" "📈 Optimize" "💬 Comment" | awk '{print $0}') Ethereum network"

      - name: Push changes
        run: |
          git push origin master

  near_auto_commit:
    runs-on: ubuntu-latest
    needs: ethereum_auto_commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git pull origin master

      - name: Run NEAR script
        run: |
          chmod +x near.sh
          ./near.sh /https://near.lava.build/lava-referer-daee88c3-0136-4289-b6a1-a88fdc9be1cf/

      - name: Configure Git identity
        run: |
          git config user.email "olivereric0067@gmail.com"
          git config user.name "oliveric0067"

      - name: Commit changes
        run: |
          git add -A
          git commit -m "$(shuf -n1 -e "🔥 Hotfix" "✨ Feature" "🚀 Upgrade" "🛠️ Fix" "🔧 Refactor" "🔍 Investigate" "💡 Improve" "📦 Update" "📈 Optimize" "💬 Comment" | awk '{print $0}') NEAR network"

      - name: Push changes
        run: |
          git push origin master

  starknet_auto_commit:
    runs-on: ubuntu-latest
    needs: near_auto_commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git pull origin master

      - name: Run StarkNet script
        run: |
          chmod +x starknet.sh
          ./starknet.sh /https://rpc.starknet.lava.build/lava-referer-daee88c3-0136-4289-b6a1-a88fdc9be1cf/

      - name: Configure Git identity
        run: |
          git config user.email "oliveric0067@gmail.com"
          git config user.name "oliveric0067"

      - name: Commit changes
        run: |
          git add -A
          git commit -m "$(shuf -n1 -e "🔥 Hotfix" "✨ Feature" "🚀 Upgrade" "🛠️ Fix" "🔧 Refactor" "🔍 Investigate" "💡 Improve" "📦 Update" "📈 Optimize" "💬 Comment" | awk '{print $0}') StarkNet network"

      - name: Push changes
        run: |
          git push origin master

  axelar_auto_commit:
    runs-on: ubuntu-latest
    needs: starknet_auto_commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull latest changes
        run: |
          git pull origin master

      - name: Run Axelar script
        run: |
          chmod +x axelar.sh
          ./axelar.sh /https://tm.axelar.lava.build/lava-referer-daee88c3-0136-4289-b6a1-a88fdc9be1cf/

      - name: Configure Git identity
        run: |
          git config user.email "olivereric0067@gmail.com"
          git config user.name "oliveric0067"

      - name: Commit changes
        run: |
          git add -A
          git commit -m "$(shuf -n1 -e "🔥 Hotfix" "✨ Feature" "🚀 Upgrade" "🛠️ Fix" "🔧 Refactor" "🔍 Investigate" "💡 Improve" "📦 Update" "📈 Optimize" "💬 Comment" | awk '{print $0}') Axelar network"

      - name: Push changes
        run: |
          git push origin master
                      - name: Setup Node.js environment
  uses: actions/setup-node@v4.0.2
  with:
    # Set always-auth in npmrc.
    always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
    node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
    node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
